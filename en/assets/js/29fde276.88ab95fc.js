"use strict";(self.webpackChunkchunjun_web=self.webpackChunkchunjun_web||[]).push([[5970],{3905:function(e,t,a){a.d(t,{Zo:function(){return m},kt:function(){return k}});var n=a(7294);function l(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){l(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function u(e,t){if(null==e)return{};var a,n,l=function(e,t){if(null==e)return{};var a,n,l={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(l[a]=e[a]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(l[a]=e[a])}return l}var o=n.createContext({}),p=function(e){var t=n.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},m=function(e){var t=p(e.components);return n.createElement(o.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var a=e.components,l=e.mdxType,r=e.originalType,o=e.parentName,m=u(e,["components","mdxType","originalType","parentName"]),c=p(a),k=l,N=c["".concat(o,".").concat(k)]||c[k]||s[k]||r;return a?n.createElement(N,i(i({ref:t},m),{},{components:a})):n.createElement(N,i({ref:t},m))}));function k(e,t){var a=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=a.length,i=new Array(r);i[0]=c;var u={};for(var o in t)hasOwnProperty.call(t,o)&&(u[o]=t[o]);u.originalType=e,u.mdxType="string"==typeof e?e:l,i[1]=u;for(var p=2;p<r;p++)i[p]=a[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}c.displayName="MDXCreateElement"},5786:function(e,t,a){a.r(t),a.d(t,{assets:function(){return m},contentTitle:function(){return o},default:function(){return k},frontMatter:function(){return u},metadata:function(){return p},toc:function(){return s}});var n=a(7462),l=a(3366),r=(a(7294),a(3905)),i=["components"],u={},o="MySQL Source",p={unversionedId:"chunjunDocs/connectors/mysql/mysql-source",id:"chunjunDocs/connectors/mysql/mysql-source",title:"MySQL Source",description:"1. Introduce",source:"@site/docs/chunjunDocs/connectors/mysql/mysql-source.md",sourceDirName:"chunjunDocs/connectors/mysql",slug:"/chunjunDocs/connectors/mysql/mysql-source",permalink:"/chunjun-web/en/docs/chunjunDocs/connectors/mysql/mysql-source",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/chunjunDocs/connectors/mysql/mysql-source.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"MySQL Sink",permalink:"/chunjun-web/en/docs/chunjunDocs/connectors/mysql/mysql-sink"},next:{title:"Oracle Lookup",permalink:"/chunjun-web/en/docs/chunjunDocs/connectors/oracle/oracle-lookup"}},m={},s=[{value:"1. Introduce",id:"1-introduce",level:2},{value:"2. Version Support",id:"2-version-support",level:2},{value:"3. Connector Name",id:"3-connector-name",level:2},{value:"4. Parameter description",id:"4-parameter-description",level:2},{value:"4.1 Sync",id:"41-sync",level:4},{value:"4.2 SQL",id:"42-sql",level:4},{value:"5. Type",id:"5-type",level:2},{value:"6. Example",id:"6-example",level:2}],c={toc:s};function k(e){var t=e.components,a=(0,l.Z)(e,i);return(0,r.kt)("wrapper",(0,n.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"mysql-source"},"MySQL Source"),(0,r.kt)("h2",{id:"1-introduce"},"1. Introduce"),(0,r.kt)("p",null,"MySQL Source"),(0,r.kt)("h2",{id:"2-version-support"},"2. Version Support"),(0,r.kt)("p",null,"MySQL 5.x"),(0,r.kt)("h2",{id:"3-connector-name"},"3. Connector Name"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Sync"),(0,r.kt)("th",{parentName:"tr",align:null},"mysqlsource\u3001mysqlreader"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"SQL"),(0,r.kt)("td",{parentName:"tr",align:null},"mysql-x")))),(0,r.kt)("h2",{id:"4-parameter-description"},"4. Parameter description"),(0,r.kt)("h4",{id:"41-sync"},"4.1 Sync"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"connection"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Definition: Database connection parameters, including jdbcUrl, schema, table, and so on"),(0,r.kt)("li",{parentName:"ul"},"Required: true"),(0,r.kt)("li",{parentName:"ul"},"Type: List"),(0,r.kt)("li",{parentName:"ul"},"Default: null",(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-text"},'"connection": [{\n "jdbcUrl": ["jdbc:mysql://0.0.0.1:3306/database?useSSL=false"],\n "table": ["table"],\n "schema":"public"\n}]\n')))))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jdbcUrl"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Definition: The jdbc connection string for the relational database,search document for detail information of\njdbcUrl: ",(0,r.kt)("a",{parentName:"li",href:"http://dev.mysql.com/doc/connector-j/en/connector-j-reference-configuration-properties.html"},"MySQL doc")),(0,r.kt)("li",{parentName:"ul"},"Required: true"),(0,r.kt)("li",{parentName:"ul"},"Type: string"),(0,r.kt)("li",{parentName:"ul"},"Default: null")))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"schema"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Description: database schema name"),(0,r.kt)("li",{parentName:"ul"},"Required: Optional"),(0,r.kt)("li",{parentName:"ul"},"Type: String"),(0,r.kt)("li",{parentName:"ul"},"Default: (none)")))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"table"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Definition: The name of the table of the destination table.Currently, only a single table is supported, and\nmultiple tables are supported later."),(0,r.kt)("li",{parentName:"ul"},"Required: true"),(0,r.kt)("li",{parentName:"ul"},"Type: List"),(0,r.kt)("li",{parentName:"ul"},"Default: null")))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"username"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Definition: username of database"),(0,r.kt)("li",{parentName:"ul"},"Required: true"),(0,r.kt)("li",{parentName:"ul"},"Type: String"),(0,r.kt)("li",{parentName:"ul"},"Default: null")))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"password"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Definition: password of database"),(0,r.kt)("li",{parentName:"ul"},"Required: true"),(0,r.kt)("li",{parentName:"ul"},"Type: String"),(0,r.kt)("li",{parentName:"ul"},"Default: null")))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"fetchSize"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Definition: Read the data size from the database at one time. MySQL will read all the results into the memory once\nby Default. When the amount of data is large, it may cause OOM. Setting this parameter can control the fetchSize\ndata read each time, instead of the Default Read all the data at once; enable fetchSize to meet the following\nrequirements: the database version must be higher than 5.0.2, and the connection parameter useCursorFetch=true.\nAttention: The value of this parameter cannot be set too large, otherwise the reading will time out and the task\nwill fail."),(0,r.kt)("li",{parentName:"ul"},"Required: false"),(0,r.kt)("li",{parentName:"ul"},"Type: int"),(0,r.kt)("li",{parentName:"ul"},"Default: 1024")))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"where"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Definition: Filter conditions, the reader plug-in splices SQL according to the specified column, table, and where\nconditions, and performs data extraction based on this SQL. In actual business scenarios, the data of the day is\noften selected for synchronization, and the where condition can be specified as gmt_create> time."),(0,r.kt)("li",{parentName:"ul"},"Attention: The where condition cannot be specified as limit 10. Limit is not a legal where clause of SQL."),(0,r.kt)("li",{parentName:"ul"},"Required: false"),(0,r.kt)("li",{parentName:"ul"},"Type: String"),(0,r.kt)("li",{parentName:"ul"},"Default: null")))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"splitPk"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Definition: Specifying this parameter when channell in the speed configuration is greater than 1, the Reader\nplug-in stitches the sql based on the number of concurrings and the fields specified by this parameter, allowing\neach concurrent to read different data and increasing the read rate."),(0,r.kt)("li",{parentName:"ul"},"Attention:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"SplitPk is recommended to use the table primary key, because the table primary key is usually more uniform, so\nthe sliced out is not easy to appear data hot spots\uff1b"),(0,r.kt)("li",{parentName:"ul"},"Currently splitPk only supports integer data segmentation, and does not support other types such as floating\npoint, string, and date. If the user specifies other non-supported types, FlinkX will report an error\uff1b"),(0,r.kt)("li",{parentName:"ul"},"If the channel is greater than 1 but this parameter is not configured, the task will be set as failed."))),(0,r.kt)("li",{parentName:"ul"},"Required: false"),(0,r.kt)("li",{parentName:"ul"},"Type: String"),(0,r.kt)("li",{parentName:"ul"},"Default: null")))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"queryTimeOut"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Definition: Query timeout\uff0cUnit: second\u3002"),(0,r.kt)("li",{parentName:"ul"},"Attention: When the amount of data is large, or when querying from a view, or a custom sql query, you can specify\nthe timeout period through this parameter."),(0,r.kt)("li",{parentName:"ul"},"Required: false"),(0,r.kt)("li",{parentName:"ul"},"Type: int"),(0,r.kt)("li",{parentName:"ul"},"Default: 1000")))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"customSql"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Definition: For custom query statements, if only the specified fields cannot meet the requirements, you can\nspecify the query sql through this parameter, which can be arbitrarily complex query statements."),(0,r.kt)("li",{parentName:"ul"},"Attention:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"It can only be a query statement, otherwise it will cause the task to fail;"),(0,r.kt)("li",{parentName:"ul"},"The fields returned by the query statement need to correspond to the fields in the column list;"),(0,r.kt)("li",{parentName:"ul"},"When this parameter is specified, the table specified in the connection is invalid;"),(0,r.kt)("li",{parentName:"ul"},"When specifying this parameter, column must specify specific field information, and cannot be replaced by *;"))),(0,r.kt)("li",{parentName:"ul"},"Required: false"),(0,r.kt)("li",{parentName:"ul"},"Type: String"),(0,r.kt)("li",{parentName:"ul"},"Default: null")))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"column")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Definition: Need to read the field.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"format: Support 3 formats 1.Read all fields, if there are a lot of fields, you can use the following wording:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'"column":["*"]\n')),(0,r.kt)("p",{parentName:"li"},"2.Specify only the field name:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},'"column":["id","name"]\n')),(0,r.kt)("p",{parentName:"li"},"3.Specify specific information:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-json"},'"column": [{\n    "name": "col",\n    "type": "datetime",\n    "format": "yyyy-MM-dd hh:mm:ss",\n    "value": "value"\n}]\n'))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Property description:"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"name: the name of the field"),(0,r.kt)("li",{parentName:"ul"},"type: The field type can be different from the field type in the database, the program will do a type\nconversion"),(0,r.kt)("li",{parentName:"ul"},"format: If the field is a time string, you can specify the time format and convert the field type to date\nformat to return"),(0,r.kt)("li",{parentName:"ul"},"value: If the specified field does not exist in the database, the value of value will be returned as a\nconstant column. If the specified field exists, when the value of the specified field is null, the value will\nbe returned as Default."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Required: true")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Default: null"))))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"polling"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Definition: Whether to enable interval polling, after enabling it, data will be periodically pulled from the\ndatabase according to the pollingInterval polling interval. To enable interval polling, you need to configure the\nparameters pollingInterval and increColumn, and you can choose the configuration parameter startLocation. If the\nparameter startLocation is not configured, the maximum value of the incremental field will be queried from the\ndatabase as the starting position of the poll when the task starts."),(0,r.kt)("li",{parentName:"ul"},"Required: false"),(0,r.kt)("li",{parentName:"ul"},"Type: Boolean"),(0,r.kt)("li",{parentName:"ul"},"Default: false")))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"pollingInterval"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Definition: Polling interval, the interval of pulling data from the database, the Default is 5000 milliseconds."),(0,r.kt)("li",{parentName:"ul"},"Required: false"),(0,r.kt)("li",{parentName:"ul"},"Type: long"),(0,r.kt)("li",{parentName:"ul"},"Default: 5000")))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"increColumn"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Definition: Incremental field, which can be the corresponding incremental field name, or a pure number, indicating\nthe sequential position of the incremental field in the column (starting from 0)"),(0,r.kt)("li",{parentName:"ul"},"Required: false"),(0,r.kt)("li",{parentName:"ul"},"Type: String or int"),(0,r.kt)("li",{parentName:"ul"},"Default: null")))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"startLocation"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Definition: Incremental query start position"),(0,r.kt)("li",{parentName:"ul"},"Required: false"),(0,r.kt)("li",{parentName:"ul"},"Type: String"),(0,r.kt)("li",{parentName:"ul"},"Default: null")))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"useMaxFunc"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Definition: It is used to mark whether to save one or more pieces of data of the endLocation location, true: do\nnot save, false (Default): save, in some cases the last few data may be recorded repeatedly, this parameter can be\nconfigured as true."),(0,r.kt)("li",{parentName:"ul"},"Required: false"),(0,r.kt)("li",{parentName:"ul"},"Type: Boolean"),(0,r.kt)("li",{parentName:"ul"},"Default: false")))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"requestAccumulatorInterval"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Definition: The interval between sending the query accumulator request."),(0,r.kt)("li",{parentName:"ul"},"Required: false"),(0,r.kt)("li",{parentName:"ul"},"Type: int"),(0,r.kt)("li",{parentName:"ul"},"Default: 2")))),(0,r.kt)("h4",{id:"42-sql"},"4.2 SQL"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"connector"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Definition: mysql-x"),(0,r.kt)("li",{parentName:"ul"},"Required: true"),(0,r.kt)("li",{parentName:"ul"},"Type: String"),(0,r.kt)("li",{parentName:"ul"},"Default: null")))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"url")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Definition: jdbc:mysql://localhost:3306/test"),(0,r.kt)("li",{parentName:"ul"},"Required: true"),(0,r.kt)("li",{parentName:"ul"},"Type: String"),(0,r.kt)("li",{parentName:"ul"},"Default: null"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"schema")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Description: database schema name"),(0,r.kt)("li",{parentName:"ul"},"Required: Optional"),(0,r.kt)("li",{parentName:"ul"},"Type: String"),(0,r.kt)("li",{parentName:"ul"},"Default: (none)")))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"table-name"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Definition: table-name"),(0,r.kt)("li",{parentName:"ul"},"Required: true"),(0,r.kt)("li",{parentName:"ul"},"Type: String"),(0,r.kt)("li",{parentName:"ul"},"Default: null:")))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"username"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Definition: username"),(0,r.kt)("li",{parentName:"ul"},"Required: true"),(0,r.kt)("li",{parentName:"ul"},"Type: String"),(0,r.kt)("li",{parentName:"ul"},"Default: null")))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"password"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Definition: password"),(0,r.kt)("li",{parentName:"ul"},"Required: true"),(0,r.kt)("li",{parentName:"ul"},"Type: String"),(0,r.kt)("li",{parentName:"ul"},"Default: null")))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"scan.polling-interval"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Definition: Interval training time.Optional(Leave blank as patch task)\uff0cDefault value is null."),(0,r.kt)("li",{parentName:"ul"},"Required: false"),(0,r.kt)("li",{parentName:"ul"},"Type: String"),(0,r.kt)("li",{parentName:"ul"},"Default: null")))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"scan.parallelism"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Definition: Parallelism"),(0,r.kt)("li",{parentName:"ul"},"Required: false"),(0,r.kt)("li",{parentName:"ul"},"Type: String"),(0,r.kt)("li",{parentName:"ul"},"Default: null")))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"scan.fetch-size"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Definition: Each fetch size from the database.Unit: Piece"),(0,r.kt)("li",{parentName:"ul"},"Required: false"),(0,r.kt)("li",{parentName:"ul"},"Type: String"),(0,r.kt)("li",{parentName:"ul"},"Default: 1024")))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"scan.query-timeout"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Definition: Database connection timeout time, unit: second."),(0,r.kt)("li",{parentName:"ul"},"Required: false"),(0,r.kt)("li",{parentName:"ul"},"Type: String"),(0,r.kt)("li",{parentName:"ul"},"Default: 1")))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"scan.partition.column"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Definition: The segmentation field used when multiple parallelism is enabled to read data"),(0,r.kt)("li",{parentName:"ul"},"Required: false"),(0,r.kt)("li",{parentName:"ul"},"Type: String"),(0,r.kt)("li",{parentName:"ul"},"Default: null")))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"scan.partition.strategy"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Definition: Data fragmentation strategy"),(0,r.kt)("li",{parentName:"ul"},"Required: false"),(0,r.kt)("li",{parentName:"ul"},"Type: String"),(0,r.kt)("li",{parentName:"ul"},"Default: range")))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"scan.increment.column"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Definition: Increment field name"),(0,r.kt)("li",{parentName:"ul"},"Required: false"),(0,r.kt)("li",{parentName:"ul"},"Type: String"),(0,r.kt)("li",{parentName:"ul"},"Default: null")))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"scan.increment.column-type"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Definition: Incremental field type"),(0,r.kt)("li",{parentName:"ul"},"Required: false"),(0,r.kt)("li",{parentName:"ul"},"Type: String"),(0,r.kt)("li",{parentName:"ul"},"Default: null")))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"scan.start-location"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Definition: The start position of the increment field, if not specified, all will be synchronized first, and then\nin the increment"),(0,r.kt)("li",{parentName:"ul"},"Required: false"),(0,r.kt)("li",{parentName:"ul"},"Type: String"),(0,r.kt)("li",{parentName:"ul"},"Default: null")))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"scan.restore.columnname"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Definition: When check-point is turned on, the task continues with the field name of save-point/check-point. If\nyou continue to run, it will overwrite the start position of scan.start-location, starting from the point where\nyou continue to run."),(0,r.kt)("li",{parentName:"ul"},"Required: false"),(0,r.kt)("li",{parentName:"ul"},"Type: String"),(0,r.kt)("li",{parentName:"ul"},"Default: null")))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"scan.restore.columntype"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Definition: When check-point is turned on, the task continues from save-point/check-point field type"),(0,r.kt)("li",{parentName:"ul"},"Required: false"),(0,r.kt)("li",{parentName:"ul"},"Type: String"),(0,r.kt)("li",{parentName:"ul"},"Default: null")))),(0,r.kt)("h2",{id:"5-type"},"5. Type"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"SUPPORTED"),(0,r.kt)("th",{parentName:"tr",align:null},"DATA TYPE"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"YES"),(0,r.kt)("td",{parentName:"tr",align:null},"BOOLEAN\u3001BIT\u3001TINYINT\u3001TINYINT UNSIGNED\u3001SMALLINT\u3001SMALLINT UNSIGNED\u3001MEDIUMINT\u3001MEDIUMINT UNSIGNED\u3001 INT\u3001INT UNSIGNED\u3001INTEGER\u3001INT UNSIGNED\u3001BIGINT\u3001BIGINT UNSIGNED\u3001REAL\u3001FLOAT\u3001FLOAT UNSIGNED\u3001DECIMAL\u3001DECIMAL UNSIGNED\u3001NUMERIC\u3001DOUBLE\u3001DOUBLE UNSIGNED\u3001STRING\u3001VARCHAR\u3001CHAR\u3001TIMESTAMP \u3001DATETIME\u3001DATE\u3001TIME\u3001YEAR\u3001TINYBLOB\u3001BLOB\u3001MEDIUMBLOB\u3001LONGBLOB\u3001TINYTEXT\u3001TEXT\u3001MEDIUMTEXT\u3001LONGTEXT\u3001BINARY\u3001VARBINARY\u3001JSON\u3001ENUM\u3001SET\u3001GEOMETRY")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"NO"),(0,r.kt)("td",{parentName:"tr",align:null},"ARRAY\u3001MAP\u3001STRUCT\u3001UNION")))),(0,r.kt)("h2",{id:"6-example"},"6. Example"),(0,r.kt)("p",null,"The details are in flinkx-examples dir."))}k.isMDXComponent=!0}}]);