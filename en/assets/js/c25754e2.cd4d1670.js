"use strict";(self.webpackChunkchunjun_web=self.webpackChunkchunjun_web||[]).push([[2477],{3905:function(e,t,a){a.d(t,{Zo:function(){return s},kt:function(){return c}});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function p(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var o=n.createContext({}),u=function(e){var t=n.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},s=function(e){var t=u(e.components);return n.createElement(o.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),m=u(a),c=r,k=m["".concat(o,".").concat(c)]||m[c]||d[c]||i;return a?n.createElement(k,l(l({ref:t},s),{},{components:a})):n.createElement(k,l({ref:t},s))}));function c(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,l=new Array(i);l[0]=m;var p={};for(var o in t)hasOwnProperty.call(t,o)&&(p[o]=t[o]);p.originalType=e,p.mdxType="string"==typeof e?e:r,l[1]=p;for(var u=2;u<i;u++)l[u]=a[u];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},4090:function(e,t,a){a.r(t),a.d(t,{assets:function(){return s},contentTitle:function(){return o},default:function(){return c},frontMatter:function(){return p},metadata:function(){return u},toc:function(){return d}});var n=a(7462),r=a(3366),i=(a(7294),a(3905)),l=["components"],p={},o="HDFS Source",u={unversionedId:"chunjunDocs/connectors/hdfs/hdfs-source",id:"chunjunDocs/connectors/hdfs/hdfs-source",title:"HDFS Source",description:"\u2160\u3001Introduction",source:"@site/docs/chunjunDocs/connectors/hdfs/hdfs-source.md",sourceDirName:"chunjunDocs/connectors/hdfs",slug:"/chunjunDocs/connectors/hdfs/hdfs-source",permalink:"/chunjun-web/en/docs/chunjunDocs/connectors/hdfs/hdfs-source",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/chunjunDocs/connectors/hdfs/hdfs-source.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"HDFS Sink",permalink:"/chunjun-web/en/docs/chunjunDocs/connectors/hdfs/hdfs-sink"},next:{title:"hive Lookup",permalink:"/chunjun-web/en/docs/chunjunDocs/connectors/hive/hive-lookup"}},s={},d=[{value:"\u2160\u3001Introduction",id:"\u2170introduction",level:2},{value:"\u2161\u3001Supported version",id:"\u2171supported-version",level:2},{value:"\u2162\u3001Plugin name",id:"\u2172plugin-name",level:2},{value:"\u2163\u3001Parameter Description",id:"\u2173parameter-description",level:2},{value:"1\u3001Sync",id:"1sync",level:3},{value:"2\u3001SQL",id:"2sql",level:3},{value:"\u2164\u3001Data Type",id:"\u2174data-type",level:2},{value:"\u2165\u3001Script example",id:"\u2175script-example",level:2}],m={toc:d};function c(e){var t=e.components,a=(0,r.Z)(e,l);return(0,i.kt)("wrapper",(0,n.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"hdfs-source"},"HDFS Source"),(0,i.kt)("h2",{id:"\u2170introduction"},"\u2160\u3001Introduction"),(0,i.kt)("p",null,"The HDFS plugin supports reading and writing TextFile, Orc, and Parquet files directly from the configured HDFS path, and is generally used with Hive tables. For example: reading all data in a partition of the Hive table is essentially reading the data files under the HDFS path of the corresponding partition of the Hive table; writing data to a partition of the Hive table is essentially writing the data files directly to the HDFS of the corresponding partition Under the path; the HDFS plugin will not perform any DDL operations on the Hive table.\nHDFS Source does not save the offset of the read file during checkpoint, so it does not support continued running."),(0,i.kt)("h2",{id:"\u2171supported-version"},"\u2161\u3001Supported version"),(0,i.kt)("p",null,"Hadoop 2.x\u3001Hadoop 3.x"),(0,i.kt)("h2",{id:"\u2172plugin-name"},"\u2162\u3001Plugin name"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Sync"),(0,i.kt)("th",{parentName:"tr",align:null},"hdfssource\u3001hdfsreader"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"SQL"),(0,i.kt)("td",{parentName:"tr",align:null},"hdfs-x")))),(0,i.kt)("h2",{id:"\u2173parameter-description"},"\u2163\u3001Parameter Description"),(0,i.kt)("h3",{id:"1sync"},"1\u3001Sync"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"path")),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"description\uff1aThe path of the data file to be written"),(0,i.kt)("li",{parentName:"ul"},"notice\uff1aThe file path actually written is path/fileName"),(0,i.kt)("li",{parentName:"ul"},"required\uff1arequired"),(0,i.kt)("li",{parentName:"ul"},"type\uff1astring"),(0,i.kt)("li",{parentName:"ul"},"defaults\uff1anone",(0,i.kt)("br",null)))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"fileName")),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"description\uff1aData file directory name"),(0,i.kt)("li",{parentName:"ul"},"notice\uff1aThe file path actually written is path/fileName"),(0,i.kt)("li",{parentName:"ul"},"required\uff1arequired"),(0,i.kt)("li",{parentName:"ul"},"type\uff1astring"),(0,i.kt)("li",{parentName:"ul"},"defaults\uff1anone",(0,i.kt)("br",null)))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"defaultFS")),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"description\uff1aHadoop hdfs file system namenode node address. Format: hdfs://ip:port; for example: hdfs://127.0.0.1:9000"),(0,i.kt)("li",{parentName:"ul"},"required\uff1arequired"),(0,i.kt)("li",{parentName:"ul"},"type\uff1aString"),(0,i.kt)("li",{parentName:"ul"},"defaults\uff1anone",(0,i.kt)("br",null)))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"column")),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"description\uff1aNeed to read the field"),(0,i.kt)("li",{parentName:"ul"},"notice\uff1aDoes not support * format"),(0,i.kt)("li",{parentName:"ul"},"format\uff1a",(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-text"},'"column": [{\n      "name": "col",\n      "type": "string",\n      "index": 1,\n      "isPart": false,\n      "format": "yyyy-MM-dd hh:mm:ss",\n      "value": "value"\n    }]\n'))),(0,i.kt)("li",{parentName:"ul"},"property description:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"name\uff1arequired\uff0cField Name"),(0,i.kt)("li",{parentName:"ul"},"type\uff1arequired\uff0cField type, which needs to match the actual field type in the data file"),(0,i.kt)("li",{parentName:"ul"},"index\uff1aoptional\uff0cThe position index of the field in all fields, starting from 0, the default is -1, read in sequence in the order of the array, read the specified field column after configuration"),(0,i.kt)("li",{parentName:"ul"},"isPart\uff1aoptional\uff0cWhether it is a partition field, if it is a partition field, the partition assignment will be automatically intercepted from the path, the default is fale"),(0,i.kt)("li",{parentName:"ul"},"format\uff1aoptional\uff0cFormat the date according to the specified format"),(0,i.kt)("li",{parentName:"ul"},"value\uff1aoptional\uff0cConstant field, return the value of value as a constant column"))),(0,i.kt)("li",{parentName:"ul"},"required\uff1arequired"),(0,i.kt)("li",{parentName:"ul"},"type\uff1aArray"),(0,i.kt)("li",{parentName:"ul"},"defaults\uff1anone",(0,i.kt)("br",null)))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"hadoopConfig")),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"description\uff1aThe configuration in core-site.xml and hdfs-site.xml that need to be filled in the cluster HA mode, including kerberos related configuration when kerberos is turned on"),(0,i.kt)("li",{parentName:"ul"},"required\uff1aoptional"),(0,i.kt)("li",{parentName:"ul"},"type\uff1aMap<String, Object>"),(0,i.kt)("li",{parentName:"ul"},"defaults\uff1anone",(0,i.kt)("br",null)))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"filterRegex")),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"description\uff1aFile regular expression, read the matched file"),(0,i.kt)("li",{parentName:"ul"},"required\uff1aoptional"),(0,i.kt)("li",{parentName:"ul"},"type\uff1aString"),(0,i.kt)("li",{parentName:"ul"},"defaults\uff1anone",(0,i.kt)("br",null)))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"fieldDelimiter")),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"description: Field separator when fileType is text"),(0,i.kt)("li",{parentName:"ul"},"required\uff1aoptional"),(0,i.kt)("li",{parentName:"ul"},"type\uff1aString"),(0,i.kt)("li",{parentName:"ul"},"defaults\uff1a",(0,i.kt)("inlineCode",{parentName:"li"},"\\001"),(0,i.kt)("br",null)))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"encoding")),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"description\uff1aThe character encoding of the field when fileType is text"),(0,i.kt)("li",{parentName:"ul"},"required\uff1aoptional"),(0,i.kt)("li",{parentName:"ul"},"type\uff1aString"),(0,i.kt)("li",{parentName:"ul"},"defaults\uff1a",(0,i.kt)("inlineCode",{parentName:"li"},"UTF-8"))))),(0,i.kt)("h3",{id:"2sql"},"2\u3001SQL"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"path")),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"description\uff1aThe path of the data file to be read"),(0,i.kt)("li",{parentName:"ul"},"required\uff1arequired"),(0,i.kt)("li",{parentName:"ul"},"type\uff1aString"),(0,i.kt)("li",{parentName:"ul"},"defaults\uff1anone",(0,i.kt)("br",null)))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"file-type")),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"description\uff1a\u25cb File type, currently only supports user configuration as ",(0,i.kt)("inlineCode",{parentName:"li"},"text"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"orc"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"parquet"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"text\uff1atextfile file format"),(0,i.kt)("li",{parentName:"ul"},"orc\uff1aorcfile file format"),(0,i.kt)("li",{parentName:"ul"},"parquet\uff1aparquet file format"))),(0,i.kt)("li",{parentName:"ul"},"required\uff1arequired"),(0,i.kt)("li",{parentName:"ul"},"type\uff1aString"),(0,i.kt)("li",{parentName:"ul"},"defaults\uff1anone",(0,i.kt)("br",null)))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"default-fs")),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"description\uff1aHadoop hdfs file system namenode node address. Format: hdfs://ip:port; for example: hdfs://127.0.0.1:9000"),(0,i.kt)("li",{parentName:"ul"},"required\uff1arequired"),(0,i.kt)("li",{parentName:"ul"},"type\uff1aString"),(0,i.kt)("li",{parentName:"ul"},"defaults\uff1anone",(0,i.kt)("br",null)))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"column")),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"description\uff1aNeed to read the field"),(0,i.kt)("li",{parentName:"ul"},"notice\uff1aDoes not support * format"),(0,i.kt)("li",{parentName:"ul"},"format\uff1a")),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-text"},'"column": [{\n      "name": "col",\n      "type": "string",\n      "index": 1,\n      "isPart": false,\n      "format": "yyyy-MM-dd hh:mm:ss",\n      "value": "value"\n    }]\n')),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"property description:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"name\uff1arequired\uff0cField Name"),(0,i.kt)("li",{parentName:"ul"},"type\uff1arequired\uff0cField type, which needs to match the actual field type in the data file"),(0,i.kt)("li",{parentName:"ul"},"index\uff1aoptional\uff0cThe position index of the field in all fields, starting from 0, the default is -1, read in sequence in the order of the array, read the specified field column after configuration"),(0,i.kt)("li",{parentName:"ul"},"isPart\uff1aoptional\uff0cWhether it is a partition field, if it is a partition field, the partition assignment will be automatically intercepted from the path, the default is fale"),(0,i.kt)("li",{parentName:"ul"},"format\uff1aoptional\uff0cFormat the date according to the specified format"),(0,i.kt)("li",{parentName:"ul"},"value\uff1aoptional\uff0cConstant field, return the value of value as a constant column"))),(0,i.kt)("li",{parentName:"ul"},"required\uff1arequired"),(0,i.kt)("li",{parentName:"ul"},"type\uff1aArray"),(0,i.kt)("li",{parentName:"ul"},"defaults\uff1anone",(0,i.kt)("br",null)))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"hadoopConfig")),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"description\uff1aThe configuration in core-site.xml and hdfs-site.xml that need to be filled in the cluster HA mode, including kerberos related configuration when kerberos is turned on"),(0,i.kt)("li",{parentName:"ul"},"required\uff1aoptional"),(0,i.kt)("li",{parentName:"ul"},"defaults\uff1anone"),(0,i.kt)("li",{parentName:"ul"},"configuration method\uff1a'properties.key' ='value', key is the key in hadoopConfig, and value is the value in hadoopConfig, as shown below:")),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-text"},"'properties.hadoop.user.name' = 'root',\n'properties.dfs.ha.namenodes.ns' = 'nn1,nn2',\n'properties.fs.defaultFS' = 'hdfs://ns',\n'properties.dfs.namenode.rpc-address.ns.nn2' = 'ip:9000',\n'properties.dfs.client.failover.proxy.provider.ns' = 'org.apache.hadoop.hdfs.server.namenode.ha.ConfiguredFailoverProxyProvider',\n'properties.dfs.namenode.rpc-address.ns.nn1' = 'ip:9000',\n'properties.dfs.nameservices' = 'ns',\n'properties.fs.hdfs.impl.disable.cache' = 'true',\n'properties.fs.hdfs.impl' = 'org.apache.hadoop.hdfs.DistributedFileSystem'\n"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"filter-regex")),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"description\uff1aFile regular expression, read the matched file"),(0,i.kt)("li",{parentName:"ul"},"required\uff1aoptional"),(0,i.kt)("li",{parentName:"ul"},"type\uff1aString"),(0,i.kt)("li",{parentName:"ul"},"defaults\uff1anone",(0,i.kt)("br",null)))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"field-delimiter")),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"description: Field separator when fileType is text"),(0,i.kt)("li",{parentName:"ul"},"required\uff1aoptional"),(0,i.kt)("li",{parentName:"ul"},"type\uff1aString"),(0,i.kt)("li",{parentName:"ul"},"defaults\uff1a",(0,i.kt)("inlineCode",{parentName:"li"},"\\001"),(0,i.kt)("br",null)))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"encoding")),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"description\uff1aThe character encoding of the field when fileType is text"),(0,i.kt)("li",{parentName:"ul"},"required\uff1aoptional"),(0,i.kt)("li",{parentName:"ul"},"type\uff1aString"),(0,i.kt)("li",{parentName:"ul"},"defaults\uff1a",(0,i.kt)("inlineCode",{parentName:"li"},"UTF-8")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"scan.parallelism")),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"description\uff1asource parallelism"),(0,i.kt)("li",{parentName:"ul"},"required\uff1aoptional"),(0,i.kt)("li",{parentName:"ul"},"type\uff1aString"),(0,i.kt)("li",{parentName:"ul"},"defaults\uff1anone",(0,i.kt)("br",null))))),(0,i.kt)("h2",{id:"\u2174data-type"},"\u2164\u3001Data Type"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"support"),(0,i.kt)("th",{parentName:"tr",align:null},"BOOLEAN\u3001TINYINT\u3001SMALLINT\u3001INT\u3001BIGINT\u3001FLOAT\u3001DOUBLE\u3001DECIMAL\u3001STRING\u3001VARCHAR\u3001CHAR\u3001TIMESTAMP\u3001DATE\u3001BINARY"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"Not supported yet"),(0,i.kt)("td",{parentName:"tr",align:null},"ARRAY\u3001MAP\u3001STRUCT\u3001UNION")))),(0,i.kt)("h2",{id:"\u2175script-example"},"\u2165\u3001Script example"),(0,i.kt)("p",null,"See the ",(0,i.kt)("inlineCode",{parentName:"p"},"flinkx-examples")," folder in the project."))}c.isMDXComponent=!0}}]);