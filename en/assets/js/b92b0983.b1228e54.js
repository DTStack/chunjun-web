"use strict";(self.webpackChunkchunjun_web=self.webpackChunkchunjun_web||[]).push([[1896],{3905:function(e,t,n){n.d(t,{Zo:function(){return m},kt:function(){return k}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var u=a.createContext({}),o=function(e){var t=a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},m=function(e){var t=o(e.components);return a.createElement(u.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},s=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,u=e.parentName,m=p(e,["components","mdxType","originalType","parentName"]),s=o(n),k=r,d=s["".concat(u,".").concat(k)]||s[k]||c[k]||l;return n?a.createElement(d,i(i({ref:t},m),{},{components:n})):a.createElement(d,i({ref:t},m))}));function k(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=s;var p={};for(var u in t)hasOwnProperty.call(t,u)&&(p[u]=t[u]);p.originalType=e,p.mdxType="string"==typeof e?e:r,i[1]=p;for(var o=2;o<l;o++)i[o]=n[o];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}s.displayName="MDXCreateElement"},7283:function(e,t,n){n.r(t),n.d(t,{assets:function(){return m},contentTitle:function(){return u},default:function(){return k},frontMatter:function(){return p},metadata:function(){return o},toc:function(){return c}});var a=n(7462),r=n(3366),l=(n(7294),n(3905)),i=["components"],p={},u="DM Sink",o={unversionedId:"chunjunDocs/connectors/dm/dm-sink",id:"chunjunDocs/connectors/dm/dm-sink",title:"DM Sink",description:"1\u3001Introduce",source:"@site/docs/chunjunDocs/connectors/dm/dm-sink.md",sourceDirName:"chunjunDocs/connectors/dm",slug:"/chunjunDocs/connectors/dm/dm-sink",permalink:"/chunjun-web/en/docs/chunjunDocs/connectors/dm/dm-sink",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/chunjunDocs/connectors/dm/dm-sink.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"DB2 Source",permalink:"/chunjun-web/en/docs/chunjunDocs/connectors/db2/db2-source"},next:{title:"DM Source",permalink:"/chunjun-web/en/docs/chunjunDocs/connectors/dm/dm-source"}},m={},c=[{value:"1\u3001Introduce",id:"1introduce",level:2},{value:"2\u3001Version Support",id:"2version-support",level:2},{value:"3\u3001Connector name",id:"3connector-name",level:2},{value:"4\u3001Parameter description",id:"4parameter-description",level:2},{value:"1\u3001Sync",id:"1sync",level:3},{value:"5\u3001Supported data type",id:"5supported-data-type",level:2},{value:"6\u3001Demo",id:"6demo",level:2}],s={toc:c};function k(e){var t=e.components,n=(0,r.Z)(e,i);return(0,l.kt)("wrapper",(0,a.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"dm-sink"},"DM Sink"),(0,l.kt)("h2",{id:"1introduce"},"1\u3001Introduce"),(0,l.kt)("p",null,"DM sink"),(0,l.kt)("h2",{id:"2version-support"},"2\u3001Version Support"),(0,l.kt)("p",null,"DM7\u3001DM8"),(0,l.kt)("h2",{id:"3connector-name"},"3\u3001Connector name"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Sync"),(0,l.kt)("th",{parentName:"tr",align:null},"dmsink\u3001dmwriter"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"SQL"),(0,l.kt)("td",{parentName:"tr",align:null})))),(0,l.kt)("h2",{id:"4parameter-description"},"4\u3001Parameter description"),(0,l.kt)("h3",{id:"1sync"},"1\u3001Sync"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"connection")),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Description:param for Database connection,including jdbcUrl\u3001schema\u3001table and so on"),(0,l.kt)("li",{parentName:"ul"},"Required:required"),(0,l.kt)("li",{parentName:"ul"},"Type:List"),(0,l.kt)("li",{parentName:"ul"},"Default:none",(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre"},' ```text\n "connection": [{\n  "jdbcUrl": ["jdbc:dm://localhost:5236"],\n  "table": ["table"],\n  "schema":"public"\n }]\n ```\n')),(0,l.kt)("br",null)))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"jdbcUrl")),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Description:jdbc url,See for details,",(0,l.kt)("a",{parentName:"li",href:"http://www.dameng.com/down.aspx?TypeId=12&FId=t14:12:14"},"dm document")),(0,l.kt)("li",{parentName:"ul"},"Required:required"),(0,l.kt)("li",{parentName:"ul"},"Type:string"),(0,l.kt)("li",{parentName:"ul"},"Default:none",(0,l.kt)("br",null)))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"schema")),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Description:Database schema"),(0,l.kt)("li",{parentName:"ul"},"Required:optional"),(0,l.kt)("li",{parentName:"ul"},"Type:string"),(0,l.kt)("li",{parentName:"ul"},"Default:dm user name",(0,l.kt)("br",null)))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"table")),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Description: dm table name, only support one table in a single work at the moment."),(0,l.kt)("li",{parentName:"ul"},"Required:required"),(0,l.kt)("li",{parentName:"ul"},"Type:List"),(0,l.kt)("li",{parentName:"ul"},"Default:none",(0,l.kt)("br",null)))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"username")),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Description: user name"),(0,l.kt)("li",{parentName:"ul"},"Required:required"),(0,l.kt)("li",{parentName:"ul"},"Type:String"),(0,l.kt)("li",{parentName:"ul"},"Default:none",(0,l.kt)("br",null)))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"password")),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Description: password"),(0,l.kt)("li",{parentName:"ul"},"Required:required"),(0,l.kt)("li",{parentName:"ul"},"Type:String"),(0,l.kt)("li",{parentName:"ul"},"Default:none",(0,l.kt)("br",null)))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"column")),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},'Description:the fields to be written to the destination table,which is separated by English commas.for example: "column": ','["id","name","age"]'),(0,l.kt)("li",{parentName:"ul"},"Required:required"),(0,l.kt)("li",{parentName:"ul"},"Type:List"),(0,l.kt)("li",{parentName:"ul"},"Default:none",(0,l.kt)("br",null)))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"fullcolumn")),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},'Description:All fields in the destination table ,which is separated by English commas.for example: "column": ','["id","name","age","hobby"]',",if not configured, it will be obtained in the system table"),(0,l.kt)("li",{parentName:"ul"},"Required:optional"),(0,l.kt)("li",{parentName:"ul"},"Type:List"),(0,l.kt)("li",{parentName:"ul"},"Default:none",(0,l.kt)("br",null)))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"preSql")),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Description:the sql executed  before writing data into the destination table"),(0,l.kt)("li",{parentName:"ul"},"Required:optional"),(0,l.kt)("li",{parentName:"ul"},"Type:List"),(0,l.kt)("li",{parentName:"ul"},"Default:none",(0,l.kt)("br",null)))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"postSql")),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Description:the sql executed  after writing data into the destination table"),(0,l.kt)("li",{parentName:"ul"},"Required:optional"),(0,l.kt)("li",{parentName:"ul"},"Type:List"),(0,l.kt)("li",{parentName:"ul"},"Default:none",(0,l.kt)("br",null))))),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"writeMode")),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Description:the mode of  writing data, insert into or merge into"),(0,l.kt)("li",{parentName:"ul"},"Required:required"),(0,l.kt)("li",{parentName:"ul"},"All options:insert/update"),(0,l.kt)("li",{parentName:"ul"},"Type:String"),(0,l.kt)("li",{parentName:"ul"},"Default:insert",(0,l.kt)("br",null)))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"batchSize")),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Description:The number of records submitted in batch at one time. This value can greatly reduce the number of network interactions between flinkx and the database and improve the overall throughput,Setting this value too large may cause the flinkx process to run oom"),(0,l.kt)("li",{parentName:"ul"},"Required:optional"),(0,l.kt)("li",{parentName:"ul"},"Type:int"),(0,l.kt)("li",{parentName:"ul"},"Default:1024",(0,l.kt)("br",null)))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"updateKey")),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Description:When the write mode is update, you need to specify the value of this parameter as the unique index field"),(0,l.kt)("li",{parentName:"ul"},"attention:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"If this parameter is empty and the write mode is update, the application will automatically obtain the unique index in the database;"),(0,l.kt)("li",{parentName:"ul"},"If the data table does not have a unique index, but the required write mode is configured as update and, the application will write data in the way of insert;"))),(0,l.kt)("li",{parentName:"ul"},"Required:optional"),(0,l.kt)("li",{parentName:"ul"},"Type:Map<String,List>",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},'for example:"updateKey": {"key": ','["id"]',"}"))),(0,l.kt)("li",{parentName:"ul"},"Default:none",(0,l.kt)("br",null)))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"semantic")),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Description:sink operator support phase two commit"),(0,l.kt)("li",{parentName:"ul"},"attention:\n-If this parameter is blank, phase two commit is not enabled by default,which means sink operators do not support exactly-once semantics\n-Currently only supported exactly-once and at-least-once"),(0,l.kt)("li",{parentName:"ul"},"Required:optional"),(0,l.kt)("li",{parentName:"ul"},"Type:String",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},'for example:"semantic": "exactly-once"'))),(0,l.kt)("li",{parentName:"ul"},"Default:at-least-once",(0,l.kt)("br",null))))),(0,l.kt)("h2",{id:"5supported-data-type"},"5\u3001Supported data type"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"supported"),(0,l.kt)("th",{parentName:"tr",align:null},"data type"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"yes"),(0,l.kt)("td",{parentName:"tr",align:null},"CHAR\u3001CHARACTER\u3001VARCHAR\u3001VARCHAR2\u3001CLOB\u3001TEXT\u3001LONG\u3001LONGVARCHAR\u3001ENUM\u3001SET\u3001JSON\u3001DECIMAL\u3001NUMBERIC\u3001DEC\u3001NUMER\u3001INT\u3001INTEGER\u3001TINYINT\u3001BYTE\u3001BYTES\u3001SMALLINT\u3001BIGINT\u3001BINARY\u3001VARBINARY\u3001BLOB\u3001TINYBLOB\u3001MEDIUMBLOB\u3001LONGBLOB\u3001GEOMETER\u3001IMAGE\u3001REAL\u3001FLOAT\u3001DOUBLE\u3001DOUBLE PRECISION\u3001BIT\u3001YEAR\u3001DATE\u3001TIME\u3001TIMESTAMP\u3001DATETIME")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"no"),(0,l.kt)("td",{parentName:"tr",align:null},"PLS_INTEGER\u3001LONGVARBINARY\u3001BFILE\u3001TIME WITH TIME ZONE\u3001TIMESTAMP WITH TIME ZONE\u3001TIME WITH LOCAL TIME ZONE\u3001INTERVAL YEAR\u3001INTERVAL YEAR\u3001INTERVAL MONTH\u3001INTERVAL DAY\u3001INTERVAL HOUR\u3001INTERVAL MINUTE\u3001INTERVAL SECONDE\u3001INTERVAL YEAR TO MONTH\u3001INTERVAL DAY TO HOUR\u3001INTERVAL YEAR TO MINUTE\u3001INTERVAL DAY TO SECONDE\u3001INTERVAL HOUR TO MINUTE\u3001INTERVAL HOUR TO SECOND\u3001INTERVAL MINUTE TO SECONDE\u3001BOOL\u3001BOOLEAN\u3001%TYPE%\u3001%ROWTYPE\u3001\u8bb0\u5f55\u7c7b\u578b\u3001\u6570\u7ec4\u7c7b\u578b\u3001\u96c6\u5408\u7c7b\u578b")))),(0,l.kt)("h2",{id:"6demo"},"6\u3001Demo"),(0,l.kt)("p",null,"see details in ",(0,l.kt)("inlineCode",{parentName:"p"},"flinkx-examples")," dir of project flinkx."))}k.isMDXComponent=!0}}]);