"use strict";(self.webpackChunkchunjun_web=self.webpackChunkchunjun_web||[]).push([[8588],{3905:function(e,t,n){n.d(t,{Zo:function(){return m},kt:function(){return s}});var a=n(7294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function u(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var o=a.createContext({}),p=function(e){var t=a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):u(u({},t),e)),n},m=function(e){var t=p(e.components);return a.createElement(o.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},k=a.forwardRef((function(e,t){var n=e.components,l=e.mdxType,r=e.originalType,o=e.parentName,m=i(e,["components","mdxType","originalType","parentName"]),k=p(n),s=l,d=k["".concat(o,".").concat(s)]||k[s]||c[s]||r;return n?a.createElement(d,u(u({ref:t},m),{},{components:n})):a.createElement(d,u({ref:t},m))}));function s(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=n.length,u=new Array(r);u[0]=k;var i={};for(var o in t)hasOwnProperty.call(t,o)&&(i[o]=t[o]);i.originalType=e,i.mdxType="string"==typeof e?e:l,u[1]=i;for(var p=2;p<r;p++)u[p]=n[p];return a.createElement.apply(null,u)}return a.createElement.apply(null,n)}k.displayName="MDXCreateElement"},9795:function(e,t,n){n.r(t),n.d(t,{assets:function(){return m},contentTitle:function(){return o},default:function(){return s},frontMatter:function(){return i},metadata:function(){return p},toc:function(){return c}});var a=n(7462),l=n(3366),r=(n(7294),n(3905)),u=["components"],i={},o="Kudu Lookup",p={unversionedId:"chunjunDocs/connectors/kudu/kudu-lookup",id:"chunjunDocs/connectors/kudu/kudu-lookup",title:"Kudu Lookup",description:"1\u3001Introduce",source:"@site/docs/chunjunDocs/connectors/kudu/kudu-lookup.md",sourceDirName:"chunjunDocs/connectors/kudu",slug:"/chunjunDocs/connectors/kudu/kudu-lookup",permalink:"/chunjun-web/en/docs/chunjunDocs/connectors/kudu/kudu-lookup",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/chunjunDocs/connectors/kudu/kudu-lookup.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"KingBase Source",permalink:"/chunjun-web/en/docs/chunjunDocs/connectors/kingbase/kingbase-source"},next:{title:"Kudu Sink",permalink:"/chunjun-web/en/docs/chunjunDocs/connectors/kudu/kudu-sink"}},m={},c=[{value:"1\u3001Introduce",id:"1introduce",level:2},{value:"2\u3001Version support",id:"2version-support",level:2},{value:"3\u3001Plugin name",id:"3plugin-name",level:2},{value:"4\u3001Param description",id:"4param-description",level:2},{value:"5\u3001Data type",id:"5data-type",level:2},{value:"6\u3001Sample demo",id:"6sample-demo",level:2}],k={toc:c};function s(e){var t=e.components,n=(0,l.Z)(e,u);return(0,r.kt)("wrapper",(0,a.Z)({},k,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"kudu-lookup"},"Kudu Lookup"),(0,r.kt)("h2",{id:"1introduce"},"1\u3001Introduce"),(0,r.kt)("p",null,"Kudu dimension table, supports full and asynchronous methods\nFull cache: Load all dimension table data into memory. It is recommended for scenarios where the amount of data is not large and the data does not change frequently.\nAsynchronous caching: Query data in an asynchronous manner, and cache the queried data in memory using lru. It is recommended to use a large amount of data."),(0,r.kt)("h2",{id:"2version-support"},"2\u3001Version support"),(0,r.kt)("p",null,"Kudu 1.14.0"),(0,r.kt)("h2",{id:"3plugin-name"},"3\u3001Plugin name"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"SQL"),(0,r.kt)("th",{parentName:"tr",align:null},"kudu-x")))),(0,r.kt)("h2",{id:"4param-description"},"4\u3001Param description"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"masters"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Description\uff1akudu server ip and ports."),(0,r.kt)("li",{parentName:"ul"},"Requited\uff1arequited"),(0,r.kt)("li",{parentName:"ul"},"Type\uff1astring"),(0,r.kt)("li",{parentName:"ul"},"Default\uff1anone")))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"table-name"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Description\uff1akudu table name."),(0,r.kt)("li",{parentName:"ul"},"Requited\uff1arequited"),(0,r.kt)("li",{parentName:"ul"},"Type\uff1astring"),(0,r.kt)("li",{parentName:"ul"},"Default\uff1anone")))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"client.worker-count"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Description\uff1anumber of kudu worker."),(0,r.kt)("li",{parentName:"ul"},"Requited\uff1aoptional"),(0,r.kt)("li",{parentName:"ul"},"Type\uff1aint"),(0,r.kt)("li",{parentName:"ul"},"Default\uff1a2")))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"client.default-operation-timeout-ms"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Description\uff1akudu operation timeout."),(0,r.kt)("li",{parentName:"ul"},"Requited\uff1aoptional"),(0,r.kt)("li",{parentName:"ul"},"Type\uff1aint"),(0,r.kt)("li",{parentName:"ul"},"Default\uff1a30 * 1000\uff0830s\uff09")))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"client.default-admin-operation-timeout-ms"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Description\uff1aadmin operation timeout"),(0,r.kt)("li",{parentName:"ul"},"Requited\uff1aoptional"),(0,r.kt)("li",{parentName:"ul"},"Type\uff1aint"),(0,r.kt)("li",{parentName:"ul"},"Default\uff1a30 * 1000\uff0830s\uff09")))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"scan-token.query-timeout"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Description\uff1aquery operation timeout."),(0,r.kt)("li",{parentName:"ul"},"Requited\uff1aoptional"),(0,r.kt)("li",{parentName:"ul"},"Type\uff1aint"),(0,r.kt)("li",{parentName:"ul"},"Default\uff1a30 * 1000\uff0830s\uff09")))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"lookup.cache-type"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Description\uff1aDimension table cache type (NONE, LRU, ALL), default LRU"),(0,r.kt)("li",{parentName:"ul"},"Requited\uff1aoptional"),(0,r.kt)("li",{parentName:"ul"},"Type\uff1astring"),(0,r.kt)("li",{parentName:"ul"},"Default\uff1aLRU")))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"lookup.cache-period"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Description\uff1aHow often does the ALL dimension table load data, the default is 3600000 milliseconds (one hour)"),(0,r.kt)("li",{parentName:"ul"},"Requited\uff1aoptional"),(0,r.kt)("li",{parentName:"ul"},"Type\uff1astring"),(0,r.kt)("li",{parentName:"ul"},"Default\uff1a3600000")))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"lookup.cache.max-rows"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Description\uff1aThe number of cached data in lru dimension table, the default is 10000"),(0,r.kt)("li",{parentName:"ul"},"Requited\uff1aoptional"),(0,r.kt)("li",{parentName:"ul"},"Type\uff1astring"),(0,r.kt)("li",{parentName:"ul"},"Default\uff1a10000")))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"lookup.cache.ttl"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Description\uff1aThe time for lru dimension table to cache data, the default is 60000 milliseconds (one minute)"),(0,r.kt)("li",{parentName:"ul"},"Requited\uff1aoptional"),(0,r.kt)("li",{parentName:"ul"},"Type\uff1astring"),(0,r.kt)("li",{parentName:"ul"},"Default\uff1a60000")))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"lookup.parallelism"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Description\uff1alookup parallelism"),(0,r.kt)("li",{parentName:"ul"},"Requited\uff1aoptional"),(0,r.kt)("li",{parentName:"ul"},"Type\uff1astring"),(0,r.kt)("li",{parentName:"ul"},"Default\uff1anone")))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"scanner.batch-size-bytes"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Description\uff1aMaximum number of bytes returned by scanner in each batch"),(0,r.kt)("li",{parentName:"ul"},"Requited\uff1aoptional"),(0,r.kt)("li",{parentName:"ul"},"Type\uff1astring"),(0,r.kt)("li",{parentName:"ul"},"Default\uff1a0")))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"scanner.limit"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Description\uff1aThe limit on the number of rows that scanner will return"),(0,r.kt)("li",{parentName:"ul"},"Requited\uff1aoptional"),(0,r.kt)("li",{parentName:"ul"},"Type\uff1astring"),(0,r.kt)("li",{parentName:"ul"},"Default\uff1a1000 ")))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"scanner.fault-tolerant"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Description\uff1aIf true, resume scanning on another tablet server if the current server fails"),(0,r.kt)("li",{parentName:"ul"},"Requited\uff1aoptional"),(0,r.kt)("li",{parentName:"ul"},"Type\uff1astring"),(0,r.kt)("li",{parentName:"ul"},"Default\uff1anone")))),(0,r.kt)("h2",{id:"5data-type"},"5\u3001Data type"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"SUPPORTED"),(0,r.kt)("th",{parentName:"tr",align:null},"DATA TYPE"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"YES"),(0,r.kt)("td",{parentName:"tr",align:null},"INT8\u3001BYTE\u3001INT16\u3001SHORT\u3001INT32\u3001INT\u3001INT64\u3001LONG\u3001FLOAT\u3001DOUBLE\u3001BOOLEAN\u3001STRING\u3001VARCHAR\u3001DECIMAL\u3001TIMESTAMP\u3001DATE\u3001TIME\u3001BINARY")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"NO"),(0,r.kt)("td",{parentName:"tr",align:null},"ARRAY\u3001MAP\u3001STRUCT\u3001UNION")))),(0,r.kt)("h2",{id:"6sample-demo"},"6\u3001Sample demo"),(0,r.kt)("p",null,"See the 'demo' folder in the 'flinkx-examples' module of the project."))}s.isMDXComponent=!0}}]);